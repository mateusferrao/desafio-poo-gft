// <auto-generated />
using System;
using DesafioPOO.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DesafioPOO.Migrations
{
    [DbContext(typeof(CorretoraContext))]
    [Migration("20251017165918_AddValorToImoveis")]
    partial class AddValorToImoveis
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DesafioPOO.Models.Aluguel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ImovelId")
                        .HasColumnType("integer");

                    b.Property<int>("InquilinoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ImovelId");

                    b.HasIndex("InquilinoId");

                    b.ToTable("Alugueis");
                });

            modelBuilder.Entity("DesafioPOO.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("DesafioPOO.Models.Imovel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Alugado")
                        .HasColumnType("boolean");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("integer");

                    b.Property<int>("ProprietarioId")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("ProprietarioId");

                    b.ToTable("Imoveis");

                    b.HasDiscriminator<string>("Tipo").HasValue("Imovel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DesafioPOO.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");

                    b.HasDiscriminator().HasValue("Pessoa");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DesafioPOO.Models.Apartamento", b =>
                {
                    b.HasBaseType("DesafioPOO.Models.Imovel");

                    b.Property<int>("Andar")
                        .HasColumnType("integer");

                    b.Property<string>("NumeroApartamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Apartamento");
                });

            modelBuilder.Entity("DesafioPOO.Models.Casa", b =>
                {
                    b.HasBaseType("DesafioPOO.Models.Imovel");

                    b.Property<int>("NumeroBanheiros")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroQuartos")
                        .HasColumnType("integer");

                    b.Property<bool>("TemGaragem")
                        .HasColumnType("boolean");

                    b.HasDiscriminator().HasValue("Casa");
                });

            modelBuilder.Entity("DesafioPOO.Models.Inquilino", b =>
                {
                    b.HasBaseType("DesafioPOO.Models.Pessoa");

                    b.HasDiscriminator().HasValue("Inquilino");
                });

            modelBuilder.Entity("DesafioPOO.Models.Proprietario", b =>
                {
                    b.HasBaseType("DesafioPOO.Models.Pessoa");

                    b.HasDiscriminator().HasValue("Proprietario");
                });

            modelBuilder.Entity("DesafioPOO.Models.Aluguel", b =>
                {
                    b.HasOne("DesafioPOO.Models.Imovel", "Imovel")
                        .WithMany()
                        .HasForeignKey("ImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioPOO.Models.Inquilino", "Inquilino")
                        .WithMany()
                        .HasForeignKey("InquilinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imovel");

                    b.Navigation("Inquilino");
                });

            modelBuilder.Entity("DesafioPOO.Models.Imovel", b =>
                {
                    b.HasOne("DesafioPOO.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioPOO.Models.Proprietario", "Proprietario")
                        .WithMany()
                        .HasForeignKey("ProprietarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Proprietario");
                });
#pragma warning restore 612, 618
        }
    }
}
